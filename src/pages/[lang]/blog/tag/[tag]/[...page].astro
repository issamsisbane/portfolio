---
import BaseLayout from "../../../../../layouts/BaseLayout.astro";
import HorizontalCard from "../../../../../components/HorizontalCard.astro";
import { getCollection } from "astro:content";
import createSlug from "../../../../../lib/createSlug";

const { page } = Astro.props;
const { lang, tag } = Astro.params;

const labels = await import(`../../../../../i18n/locales/${lang}/blog.${lang}.json`).then((m) => m.default);

export async function getStaticPaths({ paginate }) {
  const all_posts = await getCollection("blog");

  const langs = ["fr", "en"];
  const all_tags = [...new Set(all_posts.flatMap(post => post.data.tags || []))];

  return langs.flatMap((lang) =>
    all_tags.flatMap((tag) => {
      const filtered_posts = all_posts.filter(
        (post) => post.data.lang === lang && post.data.tags?.includes(tag)
      );
      return paginate(filtered_posts, {
        params: { lang, tag },
        pageSize: 10,
      });
    })
  );
}
---

<BaseLayout title={`${labels.pageTitle} - ${tag}`} sideBarActiveItemID="blog" lang={lang}>
  <div class="mb-5">
    <div class="text-3xl w-full font-bold">{labels.pageTitle} - {tag}</div>
  </div>

  {page.data.length === 0 ? (
    <div class="bg-base-200 border-l-4 border-secondary w-full p-4 min-w-full">
      <p class="font-bold">{labels.emptyTitle}</p>
      <p>{labels.emptyMessage}</p>
    </div>
  ) : (
    <ul>
      {page.data.map((post, index) => (
        <>
          <HorizontalCard
            title={post.data.title}
            img={post.data.heroImage}
            desc={post.data.description}
            url={`/portfolio/${lang}/blog/` + createSlug(post.data.title, post.slug)}
            target="_self"
            badge={post.data.badge}
            tags={post.data.tags}
            date={post.data.pubDate}
            lang={lang}
          />
          {index !== page.data.length - 1 && (
            <div class="divider my-0" />
          )}
        </>
      ))}
    </ul>
  )}

  <div class="flex justify-between">
    {page.url.prev ? (
      <a href={page.url.prev} class="btn btn-ghost my-10 mx-5">
        <svg class="h-6 w-6 fill-current md:h-8 md:w-8" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
          <path d="M15.41,16.58L10.83,12L15.41,7.41L14,6L8,12L14,18L15.41,16.58Z" />
        </svg>
        {labels.newerPosts}
      </a>
    ) : <div />}

    {page.url.next ? (
      <a href={page.url.next} class="btn btn-ghost my-10 mx-5">
        {labels.olderPosts}
        <svg class="h-6 w-6 fill-current md:h-8 md:w-8" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
          <path d="M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z" />
        </svg>
      </a>
    ) : <div />}
  </div>
</BaseLayout>
